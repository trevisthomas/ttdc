package org.ttdc.gwt.client.beans;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.ttdc.gwt.client.constants.TagConstants;
import org.ttdc.gwt.client.forms.PostFormData;

public class PostBeanMother {
	
	private static int incrementer = 1000;
	
	private static String getIncrement(){
		incrementer++;
		return ""+incrementer;
	}
	
	
	public static GPost createTestPost1234() {
		GEntry entry = new GEntry();
		entry.setBody("This is a body of text for the first post");
		List<GEntry> entries = new ArrayList<GEntry>();
		entries.add(entry);
		GPost post1 = new GPost();
		post1.setLatestEntry(entry);
		post1.setPostId("1234");
		post1.setEntries(entries);
		
		GAssociationPostTag ass = createTitleAssociation("Title for my new post 1234");
		List<GAssociationPostTag> asses = new ArrayList<GAssociationPostTag>();
		ass.setPost(post1);
		asses.add(ass);
		
		
		ass = createCreatorAssociation(PersonBeanMother.createPerson1());
		ass.setPost(post1);
		asses.add(ass);
		
		post1.setTagAssociations(asses);
		
		return post1;
	}
	public static GPost createTestPost2345() {
		GEntry entry = new GEntry();
		entry.setBody("This is a body of text for the second post");
		List<GEntry> entries = new ArrayList<GEntry>();
		entries.add(entry);
		GPost post1 = new GPost();
		post1.setLatestEntry(entry);
		post1.setPostId("2345");
		post1.setEntries(entries);
		
		GAssociationPostTag ass = createTitleAssociation("Title for my new post 2345");
		List<GAssociationPostTag> asses = new ArrayList<GAssociationPostTag>();
		asses.add(ass);
		
		ass = createCreatorAssociation(PersonBeanMother.createPerson1());
		asses.add(ass);
		
		post1.setTagAssociations(asses);
		
		
		return post1;
	}
	
	
	public static GAssociationPostTag createTitleAssociation(String title) {
		GAssociationPostTag ass = new GAssociationPostTag();
		GTag tag = new GTag();
		tag.setValue(title);
		tag.setType(TagConstants.TYPE_TOPIC);
		tag.setTagId("1234-123-FAKE_TAG_ID"+getIncrement());
		ass.setTag(tag);
		ass.setTitle(true);
		ass.setGuid("1234-123-123"+getIncrement());
		return ass;
	}
	
	public static GAssociationPostTag createCreatorAssociation(GPerson creator) {
		GAssociationPostTag ass = createTagAssWithValueAndType(creator.getLogin(),TagConstants.TYPE_CREATOR);
		ass.setTitle(true);
		ass.setCreator(creator);
		ass.getTag().setCreator(creator);
		return ass;
	}
	public static GAssociationPostTag createTopicTagAss(String withValue){
		return createTagAssWithValueAndType(withValue,TagConstants.TYPE_TOPIC);
	}
	public static GAssociationPostTag createTagAssWithValueAndType(String withValue, String type){
		GAssociationPostTag ass = new GAssociationPostTag();
		
		GPost fakePost = new GPost();
		fakePost.setPostId("123-MOCK-POSTID");//Remember the post id will always be the same! (this is for testing the TagListPresenter)
		
		GTag tag = createTag(withValue, type);
		ass.setTag(tag);
		ass.setTitle(false);
		ass.setGuid("1234-123-ASS_ID_"+getIncrement());
		ass.setPost(fakePost);
		return ass;
	}


	public static GTag createTag(String withValue, String type) {
		GTag tag = new GTag();
		tag.setValue(withValue);
		tag.setType(type);
		tag.setTagId("1234-123-FAKE_TAG_ID-"+getIncrement());
		tag.setMass((int)(Math.random() * 100.0));
		tag.setCloudRank((int)(Math.random() * 0));
		return tag;
	}
	
	public static List<GPost> createPostListWithOnePost(){
		List<GPost> list = new ArrayList<GPost>();
		list.add(createTestPost1234());
		return list;
	}
	public static List<GPost> createPostListWithTwo(){
		List<GPost> list = new ArrayList<GPost>();
		list.add(createTestPost1234());
		list.add(createTestPost2345());
		return list;
	}
	
	
	/*
	public static GPost createNewCommentTestPost() {
		GEntry entry = new GEntry();
		entry.setBody("This is a comment generated by my test code.");
		List<GEntry> entries = new ArrayList<GEntry>();
		entries.add(entry);
		GPost post1 = new GPost();
		//post1.setPostId("postId_1234");
		post1.setEntries(entries);
		
		return post1;
	}
	*/
	
}
